buildscript {
    ext{
        queryDslVersion = "5.0.0"
        springBootVersion = "2.7.2"
    }
}

plugins {
    id 'org.springframework.boot' version '2.7.2'
    id 'io.spring.dependency-management' version '1.0.12.RELEASE'
    id 'java'

    id 'com.ewerk.gradle.plugins.querydsl' version '1.0.10'
}

group = 'com.sanhak'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    querydsl.extendsFrom compileClasspath

    all {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // web
    implementation "org.springframework.boot:spring-boot-starter-web:$springBootVersion"

    // jpa
    implementation "org.springframework.boot:spring-boot-starter-data-jpa:$springBootVersion"
    compileOnly 'org.projectlombok:lombok'

    // querydsl
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
    implementation "com.querydsl:querydsl-apt:${queryDslVersion}"

    // database
    runtimeOnly 'mysql:mysql-connector-java'
    runtimeOnly 'com.h2database:h2'

    // lombok
    annotationProcessor 'org.projectlombok:lombok'

    // model mapper
    implementation group: 'org.modelmapper', name: 'modelmapper', version: '2.3.6'

    // swagger
    implementation 'io.springfox:springfox-boot-starter:3.0.0'
    implementation 'io.springfox:springfox-swagger-ui:3.0.0'

    // log4j2
    implementation 'org.springframework.boot:spring-boot-starter-log4j2'

    // validation
    implementation "org.springframework.boot:spring-boot-starter-validation:$springBootVersion"

    // mockito, junit
    testImplementation "org.springframework.boot:spring-boot-starter-test:$springBootVersion"
    testImplementation "org.mockito:mockito-core:3.+"

    // Gson
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.5'
}

def querydslDir = "$buildDir/generated/querydsl"

querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}

sourceSets {
    main.java.srcDir querydslDir
}
compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}

tasks.named('test') {
    useJUnitPlatform()
}
